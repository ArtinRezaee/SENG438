package org.jfree.data.DataUtilitiesTest;

import static org.junit.Assert.*;

import org.jfree.data.DataUtilities;
import org.jfree.data.KeyedValues;
import org.jmock.Expectations;
import org.jmock.Mockery;
import org.junit.Test;

import junit.framework.Assert;

public class getCumilativePercentagesTest{
	
	
	@Test
	public void test() {
		Mockery mockingContext1 = new Mockery(); 
		final KeyedValues keyvals = mockingContext1.mock(KeyedValues.class);
		mockingContext1.checking(new Expectations() { 
			{
				atLeast(1).of(keyvals).getItemCount();
				will(returnValue(2));
				
				atLeast(1).of(keyvals).getValue(1);
				will(returnValue(1));
//				
//				atLeast(1).of(keyvals).getValue(1);
//				will(returnValue(2));
//				
//				one(keyvals).getValue(2);
//				will(returnValue(2));
//				
//				one(keyvals).getKey(2);
//				will(returnValue(2));
//				
//				one(keyvals).getValue(2);
//				will(returnValue(3));
			} 
		});
		KeyedValues data = DataUtilities.getCumulativePercentages(keyvals);
		
//		Mockery mockingContext2 = new Mockery();
//		final KeyedValues result = mockingContext2.mock(KeyedValues.class);
//		mockingContext2.checking(new Expectations() {
//			{
//				one(result).getItemCount(); 
//				will(returnValue(3));
//			
//				one(result).getKey(0);
//				will(returnValue(0));
//				
//				one(result).getValue(0);
//				will(returnValue(0.166));
//				
//				one(result).getKey(1);
//				will(returnValue(1));
//				
//				one(result).getValue(1);
//				will(returnValue(0.500));
//				
//				one(result).getKey(2);
//				will(returnValue(2));
//				
//				one(result).getValue(2);
//				will(returnValue(1.0));
//			} 
//		});
//		
//
//		
//		Assert.assertEquals("Objects are not erqual", result, data);
	}

}
